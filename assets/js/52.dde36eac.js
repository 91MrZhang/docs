(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{453:function(e,t,a){"use strict";a.r(t);var s=a(27),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"stw-（stop-the-world）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stw-（stop-the-world）"}},[e._v("#")]),e._v(" STW （Stop The World）")]),e._v(" "),a("p",[e._v("一些垃圾回收器，在进行垃圾回收时，为了统计准确，需要暂停JVM中所有"),a("strong",[e._v("应用线程")]),e._v("的工作，对于使用者，直观的感受就是“卡了一下”，STW的时间长短，是一个垃圾回收器质量好坏的关键")]),e._v(" "),a("h3",{attrs:{id:"safe-point"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#safe-point"}},[e._v("#")]),e._v(" Safe Point")]),e._v(" "),a("p",[e._v("JVM准备进行垃圾回收时，会将一个标志位设成True，其他各个线程每每执行到Safe Point处时，会查看这个标志位是否为True，如果为True，则将自己挂起（主动式中断），STW后，线程恢复，继续向下执行")]),e._v(" "),a("h3",{attrs:{id:"safe-region"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#safe-region"}},[e._v("#")]),e._v(" Safe Region")]),e._v(" "),a("p",[e._v("如果线程已经不工作了，例如状态为Sleep、Block等状态，这种情况，JVM会设置出一个Safe Region，如果线程打算进入Sleep、Block等状态，它们的引用信息就是暂时不变的，垃圾回收器直接统计是没有问题的，相反的，如果线程想跳出Safe Region（由Sleep、Block等状态恢复），则必须轮询，等待这次垃圾回收器工作完毕")])])}),[],!1,null,null,null);t.default=r.exports}}]);